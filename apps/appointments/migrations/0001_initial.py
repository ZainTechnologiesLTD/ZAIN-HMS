# Generated by Django 5.2.6 on 2025-09-22 20:13

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('doctors', '0001_initial'),
        ('patients', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AppointmentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('duration_minutes', models.PositiveIntegerField(default=30)),
                ('color', models.CharField(default='#007bff', help_text='Color for calendar display', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('appointment_number', models.CharField(blank=True, max_length=20, unique=True)),
                ('serial_number', models.CharField(blank=True, help_text="Serial number for doctor's schedule slot", max_length=20, unique=True)),
                ('barcode', models.CharField(blank=True, help_text='Barcode for easy scanning', max_length=50, unique=True)),
                ('department', models.CharField(blank=True, help_text='Department/Specialty', max_length=100)),
                ('appointment_date', models.DateField(blank=True, null=True)),
                ('appointment_time', models.TimeField(blank=True, null=True)),
                ('slot_time_start', models.TimeField(blank=True, help_text='Slot start time from doctor schedule', null=True)),
                ('slot_time_end', models.TimeField(blank=True, help_text='Slot end time from doctor schedule', null=True)),
                ('duration_minutes', models.PositiveIntegerField(default=30)),
                ('status', models.CharField(choices=[('SCHEDULED', 'Scheduled'), ('CONFIRMED', 'Confirmed'), ('CHECKED_IN', 'Checked In'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('NO_SHOW', 'No Show'), ('RESCHEDULED', 'Rescheduled')], default='SCHEDULED', max_length=20)),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('NORMAL', 'Normal'), ('HIGH', 'High'), ('URGENT', 'Urgent')], default='NORMAL', max_length=10)),
                ('chief_complaint', models.TextField(help_text='Primary reason for visit')),
                ('symptoms', models.TextField(blank=True, help_text='Patient reported symptoms')),
                ('notes', models.TextField(blank=True, help_text='Additional notes')),
                ('is_follow_up', models.BooleanField(default=False)),
                ('consultation_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('is_paid', models.BooleanField(default=False)),
                ('payment_method', models.CharField(blank=True, max_length=20)),
                ('patient_phone', models.CharField(blank=True, help_text='Patient phone for notifications', max_length=20)),
                ('patient_email', models.EmailField(blank=True, help_text='Patient email for notifications', max_length=254)),
                ('notification_sent', models.BooleanField(default=False, help_text='Whether notifications have been sent')),
                ('notification_types', models.JSONField(default=list, help_text='List of notification types sent')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('checked_in_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('cancellation_reason', models.TextField(blank=True)),
                ('ai_no_show_probability', models.FloatField(blank=True, help_text='AI predicted no-show probability (0.0-1.0)', null=True)),
                ('ai_recommendation_score', models.FloatField(blank=True, help_text='AI scheduling optimization score', null=True)),
                ('ai_reminder_strategy', models.TextField(blank=True, help_text='JSON data for AI reminder strategy')),
                ('ai_scheduling_conflicts', models.TextField(blank=True, help_text='JSON data for detected scheduling conflicts')),
                ('ai_optimization_notes', models.TextField(blank=True, help_text='AI optimization and recommendation notes')),
                ('cancelled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cancelled_appointments', to=settings.AUTH_USER_MODEL)),
                ('checked_in_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='checked_in_appointments', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_appointments', to=settings.AUTH_USER_MODEL)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='doctors.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='patients.patient')),
                ('previous_appointment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='follow_ups', to='appointments.appointment')),
            ],
            options={
                'ordering': ['appointment_date', 'appointment_time'],
            },
        ),
        migrations.CreateModel(
            name='AppointmentHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_status', models.CharField(choices=[('SCHEDULED', 'Scheduled'), ('CONFIRMED', 'Confirmed'), ('CHECKED_IN', 'Checked In'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('NO_SHOW', 'No Show'), ('RESCHEDULED', 'Rescheduled')], max_length=20)),
                ('new_status', models.CharField(choices=[('SCHEDULED', 'Scheduled'), ('CONFIRMED', 'Confirmed'), ('CHECKED_IN', 'Checked In'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('NO_SHOW', 'No Show'), ('RESCHEDULED', 'Rescheduled')], max_length=20)),
                ('changed_at', models.DateTimeField(auto_now_add=True)),
                ('reason', models.TextField(blank=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='appointments.appointment')),
                ('changed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Appointment Histories',
                'ordering': ['-changed_at'],
            },
        ),
        migrations.CreateModel(
            name='AppointmentReminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminder_type', models.CharField(choices=[('EMAIL', 'Email'), ('SMS', 'SMS'), ('WHATSAPP', 'WhatsApp'), ('PUSH', 'Push Notification')], max_length=20)),
                ('scheduled_at', models.DateTimeField()),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('is_sent', models.BooleanField(default=False)),
                ('error_message', models.TextField(blank=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='appointments.appointment')),
            ],
            options={
                'ordering': ['scheduled_at'],
            },
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['appointment_date', 'appointment_time'], name='appointment_appoint_c5b816_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['status'], name='appointment_status_8fe9d7_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['patient'], name='appointment_patient_94a7ef_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['doctor'], name='appointment_doctor__649ad1_idx'),
        ),
    ]
