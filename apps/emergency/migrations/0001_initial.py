# Generated by Django 5.2.5 on 2025-08-26 08:08

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('doctors', '0001_initial'),
        ('tenants', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EmergencyCase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case_number', models.CharField(max_length=100, unique=True)),
                ('patient_name', models.CharField(blank=True, max_length=200)),
                ('status', models.CharField(choices=[('waiting', 'Waiting'), ('in_treatment', 'In Treatment'), ('observation', 'Under Observation'), ('discharged', 'Discharged'), ('transferred', 'Transferred')], default='waiting', max_length=20)),
                ('priority', models.CharField(choices=[('critical', 'Critical'), ('urgent', 'Urgent'), ('semi_urgent', 'Semi-Urgent'), ('non_urgent', 'Non-Urgent')], default='non_urgent', max_length=20)),
                ('arrival_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['priority', '-arrival_time'],
            },
        ),
        migrations.CreateModel(
            name='EmergencyDiagnosticTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_type', models.CharField(max_length=20)),
                ('test_name', models.CharField(max_length=200)),
                ('ordered_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(default='ORDERED', max_length=20)),
                ('result_time', models.DateTimeField(blank=True, null=True)),
                ('result_summary', models.TextField(blank=True)),
                ('result_file', models.FileField(blank=True, null=True, upload_to='emergency/test_results/')),
                ('priority', models.CharField(default='ROUTINE', max_length=20)),
                ('clinical_indication', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diagnostic_tests', to='emergency.emergencycase')),
                ('ordered_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='doctors.doctor')),
            ],
            options={
                'ordering': ['-ordered_time'],
            },
        ),
        migrations.CreateModel(
            name='EmergencyMedication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medication_name', models.CharField(max_length=200)),
                ('dosage', models.CharField(max_length=100)),
                ('route', models.CharField(max_length=50)),
                ('frequency', models.CharField(max_length=100)),
                ('administered_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('order_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(default='ORDERED', max_length=20)),
                ('indication', models.CharField(blank=True, max_length=300)),
                ('notes', models.TextField(blank=True)),
                ('administered_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medications', to='emergency.emergencycase')),
                ('ordered_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='doctors.doctor')),
            ],
            options={
                'ordering': ['-administered_time'],
            },
        ),
        migrations.CreateModel(
            name='EmergencyTransfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transfer_type', models.CharField(max_length=20)),
                ('from_location', models.CharField(max_length=200)),
                ('to_location', models.CharField(max_length=200)),
                ('transfer_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('transfer_reason', models.TextField()),
                ('condition_on_transfer', models.TextField()),
                ('transport_mode', models.CharField(blank=True, max_length=20)),
                ('equipment_required', models.TextField(blank=True)),
                ('monitoring_required', models.TextField(blank=True)),
                ('transfer_summary', models.TextField()),
                ('medications_transferred', models.TextField(blank=True)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfers', to='emergency.emergencycase')),
                ('receiving_doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='doctors.doctor')),
                ('to_tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tenants.tenant')),
                ('transferred_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-transfer_time'],
            },
        ),
        migrations.CreateModel(
            name='EmergencyVitalSigns',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recorded_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('temperature', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('blood_pressure_systolic', models.PositiveIntegerField(blank=True, null=True)),
                ('blood_pressure_diastolic', models.PositiveIntegerField(blank=True, null=True)),
                ('heart_rate', models.PositiveIntegerField(blank=True, null=True)),
                ('respiratory_rate', models.PositiveIntegerField(blank=True, null=True)),
                ('oxygen_saturation', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('pain_scale', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('notes', models.TextField(blank=True)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vital_signs', to='emergency.emergencycase')),
                ('recorded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Emergency Vital Signs',
                'ordering': ['-recorded_time'],
            },
        ),
    ]
