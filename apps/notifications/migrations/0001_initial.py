# Generated by Django 5.2.6 on 2025-09-22 20:13

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('patients', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_enabled', models.BooleanField(default=True)),
                ('email_from_name', models.CharField(default='Hospital Management System', max_length=100)),
                ('email_from_address', models.EmailField(blank=True, max_length=254)),
                ('whatsapp_enabled', models.BooleanField(default=False)),
                ('whatsapp_api_url', models.URLField(blank=True, help_text='WhatsApp Business API URL')),
                ('whatsapp_api_key', models.CharField(blank=True, max_length=200)),
                ('whatsapp_phone_number', models.CharField(blank=True, max_length=20)),
                ('telegram_enabled', models.BooleanField(default=False)),
                ('telegram_bot_token', models.CharField(blank=True, max_length=200)),
                ('telegram_chat_id', models.CharField(blank=True, max_length=50)),
                ('sms_enabled', models.BooleanField(default=False)),
                ('sms_api_url', models.URLField(blank=True)),
                ('sms_api_key', models.CharField(blank=True, max_length=200)),
                ('sms_sender_id', models.CharField(blank=True, max_length=20)),
                ('document_base_url', models.URLField(default='http://localhost:8000', help_text='Base URL for document links')),
                ('auto_cleanup_days', models.PositiveIntegerField(default=90, help_text='Days to keep old notifications')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Notification Settings',
                'verbose_name_plural': 'Notification Settings',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('info', 'Information'), ('success', 'Success'), ('warning', 'Warning'), ('error', 'Error')], max_length=10)),
                ('title', models.CharField(max_length=250)),
                ('message', models.TextField()),
                ('read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('action_url', models.CharField(blank=True, max_length=200)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('document_type', models.CharField(choices=[('BILL', 'Bill/Invoice'), ('PRESCRIPTION', 'Prescription'), ('DIAGNOSTIC_REPORT', 'Diagnostic Report'), ('APPOINTMENT', 'Appointment'), ('LAB_RESULT', 'Lab Result'), ('DISCHARGE_SUMMARY', 'Discharge Summary'), ('MEDICAL_CERTIFICATE', 'Medical Certificate'), ('PHARMACY_BILL', 'Pharmacy Bill')], max_length=20)),
                ('channel', models.CharField(choices=[('EMAIL', 'Email'), ('WHATSAPP', 'WhatsApp'), ('TELEGRAM', 'Telegram'), ('SMS', 'SMS')], max_length=20)),
                ('subject_template', models.CharField(help_text='Email subject or message title', max_length=200)),
                ('body_template', models.TextField(help_text='Message body with placeholders like {{patient_name}}, {{document_link}}')),
                ('is_active', models.BooleanField(default=True)),
                ('auto_send', models.BooleanField(default=True, help_text='Automatically send when document is created')),
                ('send_delay_minutes', models.PositiveIntegerField(default=0, help_text='Delay before sending (0 = immediate)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['document_type', 'channel'],
                'unique_together': {('document_type', 'channel')},
            },
        ),
        migrations.CreateModel(
            name='PatientNotification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('object_id', models.PositiveIntegerField()),
                ('recipient_email', models.EmailField(blank=True, max_length=254)),
                ('recipient_phone', models.CharField(blank=True, max_length=20)),
                ('recipient_whatsapp', models.CharField(blank=True, max_length=20)),
                ('recipient_telegram', models.CharField(blank=True, max_length=50)),
                ('subject', models.CharField(max_length=200)),
                ('message_body', models.TextField()),
                ('document_url', models.URLField(blank=True)),
                ('attachment_path', models.CharField(blank=True, max_length=500)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SENT', 'Sent'), ('DELIVERED', 'Delivered'), ('READ', 'Read'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20)),
                ('scheduled_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('failed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('max_retries', models.PositiveIntegerField(default=3)),
                ('delivery_provider', models.CharField(blank=True, help_text='WhatsApp API, Telegram Bot, etc.', max_length=50)),
                ('external_message_id', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_notifications', to='patients.patient')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notifications.notificationtemplate')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DeliveryLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attempt_number', models.PositiveIntegerField()),
                ('api_endpoint', models.URLField(blank=True)),
                ('request_payload', models.TextField(blank=True)),
                ('response_status_code', models.PositiveIntegerField(null=True)),
                ('response_body', models.TextField(blank=True)),
                ('success', models.BooleanField(default=False)),
                ('error_message', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delivery_logs', to='notifications.patientnotification')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
    ]
