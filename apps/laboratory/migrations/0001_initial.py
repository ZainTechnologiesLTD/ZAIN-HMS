# Generated by Django 5.2.5 on 2025-08-26 08:08

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('appointments', '0001_initial'),
        ('doctors', '0001_initial'),
        ('patients', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LabOrder',
            fields=[
                ('serial_number', models.CharField(blank=True, help_text='Auto-generated serial number', max_length=50, unique=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order_number', models.CharField(blank=True, max_length=20, unique=True)),
                ('order_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('priority', models.CharField(choices=[('ROUTINE', 'Routine'), ('URGENT', 'Urgent'), ('EMERGENCY', 'Emergency')], default='ROUTINE', max_length=20)),
                ('status', models.CharField(choices=[('ORDERED', 'Ordered'), ('SAMPLE_COLLECTED', 'Sample Collected'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='ORDERED', max_length=20)),
                ('clinical_history', models.TextField(blank=True)),
                ('provisional_diagnosis', models.TextField(blank=True)),
                ('special_instructions', models.TextField(blank=True)),
                ('sample_collected_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('total_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('net_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('is_paid', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('appointment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='appointments.appointment')),
                ('completed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='completed_lab_orders', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_lab_orders', to=settings.AUTH_USER_MODEL)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lab_orders', to='doctors.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lab_orders', to='patients.patient')),
                ('sample_collected_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='collected_samples', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LabOrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('ORDERED', 'Ordered'), ('SAMPLE_COLLECTED', 'Sample Collected'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='ORDERED', max_length=20)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='laboratory.laborder')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='LabResult',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('result_value', models.TextField()),
                ('result_unit', models.CharField(blank=True, max_length=50)),
                ('reference_range', models.CharField(blank=True, max_length=200)),
                ('is_abnormal', models.BooleanField(default=False)),
                ('abnormal_flag', models.CharField(blank=True, max_length=10)),
                ('methodology', models.CharField(blank=True, max_length=200)),
                ('comments', models.TextField(blank=True)),
                ('interpretation', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PENDING_REVIEW', 'Pending Review'), ('REVIEWED', 'Reviewed'), ('REPORTED', 'Reported')], default='DRAFT', max_length=20)),
                ('performed_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('reported_at', models.DateTimeField(blank=True, null=True)),
                ('result_file', models.FileField(blank=True, null=True, upload_to='lab_results/')),
                ('order_item', models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='result', to='laboratory.laborderitem')),
                ('performed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='performed_tests', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_tests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-performed_at'],
            },
        ),
        migrations.CreateModel(
            name='DigitalSignature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('signature_type', models.CharField(choices=[('PERFORMED', 'Test Performed By'), ('REVIEWED', 'Reviewed By'), ('APPROVED', 'Approved By'), ('CONSULTANT', 'Consultant Signature')], max_length=20)),
                ('signature_image', models.ImageField(blank=True, null=True, upload_to='signatures/lab/')),
                ('signature_text', models.TextField(blank=True, help_text='Text-based signature')),
                ('signed_at', models.DateTimeField(auto_now_add=True)),
                ('signature_hash', models.CharField(blank=True, max_length=64)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('position_x', models.FloatField(default=0.0, help_text='X coordinate on report')),
                ('position_y', models.FloatField(default=0.0, help_text='Y coordinate on report')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lab_signatures', to='doctors.doctor')),
                ('lab_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='signatures', to='laboratory.labresult')),
            ],
            options={
                'ordering': ['-signed_at'],
            },
        ),
        migrations.CreateModel(
            name='LabSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('requires_digital_signature', models.BooleanField(default=True)),
                ('signature_template', models.TextField(blank=True, help_text='Template for digital signature placement')),
                ('report_header', models.TextField(blank=True)),
                ('report_footer', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('head_of_section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='headed_lab_sections', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Laboratory Sections',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='LabReportTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('header_html', models.TextField(blank=True)),
                ('body_html', models.TextField()),
                ('footer_html', models.TextField(blank=True)),
                ('css_styles', models.TextField(blank=True)),
                ('is_default', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('signature_positions', models.JSONField(blank=True, default=dict, help_text='JSON defining signature positions')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report_templates', to='laboratory.labsection')),
            ],
            options={
                'ordering': ['section', 'name'],
            },
        ),
        migrations.CreateModel(
            name='LabTest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('test_code', models.CharField(blank=True, max_length=20, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('sample_type', models.CharField(choices=[('BLOOD', 'Blood'), ('URINE', 'Urine'), ('STOOL', 'Stool'), ('SPUTUM', 'Sputum'), ('CSF', 'Cerebrospinal Fluid'), ('TISSUE', 'Tissue'), ('SWAB', 'Swab'), ('OTHER', 'Other')], max_length=20)),
                ('sample_volume', models.CharField(blank=True, max_length=50)),
                ('collection_instructions', models.TextField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('reporting_time_hours', models.PositiveIntegerField(default=24)),
                ('reference_range_male', models.CharField(blank=True, max_length=200)),
                ('reference_range_female', models.CharField(blank=True, max_length=200)),
                ('reference_range_child', models.CharField(blank=True, max_length=200)),
                ('units', models.CharField(blank=True, max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('requires_fasting', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='laborderitem',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='laboratory.labtest'),
        ),
        migrations.CreateModel(
            name='LabEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('model', models.CharField(max_length=100)),
                ('manufacturer', models.CharField(max_length=100)),
                ('serial_number', models.CharField(max_length=100, unique=True)),
                ('location', models.CharField(max_length=100)),
                ('purchase_date', models.DateField()),
                ('warranty_expiry', models.DateField(blank=True, null=True)),
                ('last_maintenance', models.DateField(blank=True, null=True)),
                ('next_maintenance', models.DateField(blank=True, null=True)),
                ('last_calibration', models.DateField(blank=True, null=True)),
                ('next_calibration', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('MAINTENANCE', 'Under Maintenance'), ('CALIBRATION', 'Calibration Due'), ('OUT_OF_ORDER', 'Out of Order'), ('RETIRED', 'Retired')], default='ACTIVE', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('tests', models.ManyToManyField(blank=True, related_name='required_equipment', to='laboratory.labtest')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TestCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('display_order', models.PositiveIntegerField(default=0)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='laboratory.labsection')),
            ],
            options={
                'verbose_name_plural': 'Test Categories',
                'ordering': ['section', 'display_order', 'name'],
            },
        ),
        migrations.AddField(
            model_name='labtest',
            name='category',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='tests', to='laboratory.testcategory'),
        ),
        migrations.AddIndex(
            model_name='laborder',
            index=models.Index(fields=['order_number'], name='laboratory__order_n_0aa245_idx'),
        ),
        migrations.AddIndex(
            model_name='laborder',
            index=models.Index(fields=['patient'], name='laboratory__patient_11fe5c_idx'),
        ),
        migrations.AddIndex(
            model_name='laborder',
            index=models.Index(fields=['doctor'], name='laboratory__doctor__a2f281_idx'),
        ),
        migrations.AddIndex(
            model_name='laborder',
            index=models.Index(fields=['status'], name='laboratory__status_a16991_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='digitalsignature',
            unique_together={('lab_result', 'signature_type', 'doctor')},
        ),
        migrations.AlterUniqueTogether(
            name='labreporttemplate',
            unique_together={('section', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='testcategory',
            unique_together={('section', 'name')},
        ),
        migrations.AddIndex(
            model_name='labtest',
            index=models.Index(fields=['test_code'], name='laboratory__test_co_48df4e_idx'),
        ),
        migrations.AddIndex(
            model_name='labtest',
            index=models.Index(fields=['name'], name='laboratory__name_8c0a16_idx'),
        ),
        migrations.AddIndex(
            model_name='labtest',
            index=models.Index(fields=['category'], name='laboratory__categor_b4135a_idx'),
        ),
    ]
