# Generated by Django 5.2.5 on 2025-08-26 08:08

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tenants', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('patient_id', models.CharField(blank=True, max_length=20, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(blank=True, max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('blood_group', models.CharField(choices=[('A+', 'A Positive'), ('A-', 'A Negative'), ('B+', 'B Positive'), ('B-', 'B Negative'), ('AB+', 'AB Positive'), ('AB-', 'AB Negative'), ('O+', 'O Positive'), ('O-', 'O Negative'), ('UNKNOWN', 'Unknown')], default='UNKNOWN', max_length=10)),
                ('marital_status', models.CharField(choices=[('SINGLE', 'Single'), ('MARRIED', 'Married'), ('DIVORCED', 'Divorced'), ('WIDOWED', 'Widowed')], default='SINGLE', max_length=10)),
                ('phone', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{9,15}$')])),
                ('alternate_phone', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{9,15}$')])),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('address_line1', models.CharField(max_length=200)),
                ('address_line2', models.CharField(blank=True, max_length=200)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=20)),
                ('country', models.CharField(default='USA', max_length=100)),
                ('emergency_contact_name', models.CharField(max_length=100)),
                ('emergency_contact_relationship', models.CharField(max_length=50)),
                ('emergency_contact_phone', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{9,15}$')])),
                ('allergies', models.TextField(blank=True, help_text='List of known allergies')),
                ('chronic_conditions', models.TextField(blank=True, help_text='Chronic medical conditions')),
                ('current_medications', models.TextField(blank=True, help_text='Current medications')),
                ('medical_history', models.TextField(blank=True, help_text='Relevant medical history')),
                ('family_medical_history', models.TextField(blank=True, help_text='Family medical history')),
                ('insurance_provider', models.CharField(blank=True, max_length=200)),
                ('insurance_policy_number', models.CharField(blank=True, max_length=100)),
                ('insurance_group_number', models.CharField(blank=True, max_length=100)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='patients/photos/')),
                ('is_active', models.BooleanField(default=True)),
                ('is_vip', models.BooleanField(default=False, help_text='VIP patient status')),
                ('registration_date', models.DateTimeField(auto_now_add=True)),
                ('last_visit', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about the patient')),
                ('hospital', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='patients', to='tenants.tenant')),
                ('registered_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='registered_patients', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='PatientDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('ID', 'Identity Document'), ('INSURANCE', 'Insurance Card'), ('MEDICAL_RECORD', 'Medical Record'), ('LAB_RESULT', 'Lab Result'), ('PRESCRIPTION', 'Prescription'), ('XRAY', 'X-Ray'), ('MRI', 'MRI'), ('CT_SCAN', 'CT Scan'), ('OTHER', 'Other')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('file', models.FileField(upload_to='patients/documents/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('is_confidential', models.BooleanField(default=False)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='patients.patient')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='PatientNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_private', models.BooleanField(default=False, help_text='Private notes visible only to doctors')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_notes', to='patients.patient')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PatientVitals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature', models.DecimalField(blank=True, decimal_places=1, help_text='Temperature in Fahrenheit', max_digits=4, null=True)),
                ('blood_pressure_systolic', models.PositiveIntegerField(blank=True, null=True)),
                ('blood_pressure_diastolic', models.PositiveIntegerField(blank=True, null=True)),
                ('heart_rate', models.PositiveIntegerField(blank=True, help_text='Beats per minute', null=True)),
                ('respiratory_rate', models.PositiveIntegerField(blank=True, help_text='Breaths per minute', null=True)),
                ('oxygen_saturation', models.PositiveIntegerField(blank=True, help_text='SpO2 percentage', null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, help_text='Weight in kg', max_digits=5, null=True)),
                ('height', models.DecimalField(blank=True, decimal_places=2, help_text='Height in cm', max_digits=5, null=True)),
                ('bmi', models.DecimalField(blank=True, decimal_places=2, help_text='BMI calculated', max_digits=4, null=True)),
                ('notes', models.TextField(blank=True)),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vitals', to='patients.patient')),
                ('recorded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Patient Vitals',
                'ordering': ['-recorded_at'],
            },
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['patient_id'], name='patients_pa_patient_927c52_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['last_name', 'first_name'], name='patients_pa_last_na_1b32a7_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['phone'], name='patients_pa_phone_fc49bb_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['registration_date'], name='patients_pa_registr_b5cb97_idx'),
        ),
    ]
