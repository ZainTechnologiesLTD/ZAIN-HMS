# Generated by Django 5.2.5 on 2025-08-26 08:08

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('appointments', '0001_initial'),
        ('patients', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MedicalService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('duration_minutes', models.PositiveIntegerField(default=30)),
                ('is_taxable', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Service Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('serial_number', models.CharField(blank=True, help_text='Auto-generated serial number', max_length=50, unique=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('invoice_number', models.CharField(blank=True, max_length=20, unique=True)),
                ('invoice_date', models.DateField(default=django.utils.timezone.now)),
                ('due_date', models.DateField()),
                ('payment_terms', models.CharField(choices=[('IMMEDIATE', 'Immediate'), ('NET_15', 'Net 15 Days'), ('NET_30', 'Net 30 Days')], default='IMMEDIATE', max_length=20)),
                ('subtotal', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('tax_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('paid_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('balance_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PENDING', 'Pending'), ('PARTIALLY_PAID', 'Partially Paid'), ('PAID', 'Paid'), ('OVERDUE', 'Overdue'), ('CANCELLED', 'Cancelled'), ('REFUNDED', 'Refunded')], default='DRAFT', max_length=20)),
                ('ai_generated', models.BooleanField(default=False, help_text='Invoice generated by AI')),
                ('ai_confidence_score', models.FloatField(blank=True, help_text='AI confidence in billing accuracy (0.0-1.0)', null=True)),
                ('ai_pricing_optimization', models.JSONField(blank=True, default=dict, help_text='AI pricing optimization data')),
                ('ai_payment_prediction', models.JSONField(blank=True, default=dict, help_text='AI payment likelihood prediction')),
                ('ai_revenue_insights', models.JSONField(blank=True, default=dict, help_text='AI revenue analysis and insights')),
                ('insurance_verification_status', models.CharField(choices=[('PENDING', 'Pending Verification'), ('VERIFIED', 'Verified'), ('REJECTED', 'Rejected'), ('PARTIAL', 'Partial Coverage')], default='PENDING', max_length=20)),
                ('insurance_ai_analysis', models.JSONField(blank=True, default=dict, help_text='AI insurance analysis results')),
                ('predicted_payment_date', models.DateField(blank=True, help_text='AI predicted payment date', null=True)),
                ('payment_risk_score', models.FloatField(blank=True, help_text='AI payment risk assessment (0.0-1.0)', null=True)),
                ('notes', models.TextField(blank=True)),
                ('internal_notes', models.TextField(blank=True)),
                ('ai_notes', models.TextField(blank=True, help_text='AI-generated notes and recommendations')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_payment_date', models.DateTimeField(blank=True, null=True)),
                ('appointment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='appointments.appointment')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_invoices', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='patients.patient')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InsuranceClaim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('claim_number', models.CharField(blank=True, max_length=50, unique=True)),
                ('insurance_provider', models.CharField(max_length=200)),
                ('policy_number', models.CharField(max_length=100)),
                ('group_number', models.CharField(blank=True, max_length=100)),
                ('ai_pre_authorization_check', models.JSONField(blank=True, default=dict, help_text='AI pre-authorization analysis')),
                ('ai_approval_probability', models.FloatField(blank=True, help_text='AI prediction of claim approval', null=True)),
                ('ai_processing_insights', models.JSONField(blank=True, default=dict, help_text='AI insights for claim processing')),
                ('claim_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('approved_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('deductible_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('status', models.CharField(choices=[('SUBMITTED', 'Submitted'), ('UNDER_REVIEW', 'Under Review'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('PAID', 'Paid')], default='SUBMITTED', max_length=20)),
                ('submitted_date', models.DateField(auto_now_add=True)),
                ('response_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('rejection_reason', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('invoice', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='insurance_claim', to='billing.invoice')),
            ],
        ),
        migrations.CreateModel(
            name='BillingAIInsights',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('insight_type', models.CharField(choices=[('REVENUE_FORECAST', 'Revenue Forecast'), ('PAYMENT_PREDICTION', 'Payment Prediction'), ('PRICING_OPTIMIZATION', 'Pricing Optimization'), ('COLLECTION_STRATEGY', 'Collection Strategy'), ('INSURANCE_ANALYSIS', 'Insurance Analysis'), ('MARKET_ANALYSIS', 'Market Analysis')], max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('ai_data', models.JSONField(help_text='AI analysis data and metrics')),
                ('confidence_score', models.FloatField(help_text='AI confidence in insight (0.0-1.0)')),
                ('accuracy_score', models.FloatField(blank=True, help_text='Historical accuracy of similar insights', null=True)),
                ('potential_revenue_impact', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('implementation_priority', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], default='MEDIUM', max_length=10)),
                ('is_implemented', models.BooleanField(default=False)),
                ('implementation_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='When this insight becomes stale', null=True)),
                ('related_patients', models.ManyToManyField(blank=True, related_name='billing_ai_insights', to='patients.patient')),
                ('related_invoices', models.ManyToManyField(blank=True, related_name='ai_insights', to='billing.invoice')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InvoiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_code', models.CharField(help_text='Service/procedure code', max_length=20)),
                ('description', models.CharField(max_length=500)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('ai_generated', models.BooleanField(default=False, help_text='Item identified by AI')),
                ('ai_confidence', models.FloatField(blank=True, help_text='AI confidence in item accuracy', null=True)),
                ('ai_source', models.CharField(blank=True, help_text="AI source (e.g., 'emr_analysis', 'text_extraction')", max_length=50)),
                ('ai_extraction_details', models.JSONField(blank=True, default=dict, help_text='Details of AI extraction process')),
                ('icd_10_code', models.CharField(blank=True, help_text='ICD-10 diagnosis code', max_length=10)),
                ('cpt_code', models.CharField(blank=True, help_text='CPT procedure code', max_length=10)),
                ('ai_coding_confidence', models.FloatField(blank=True, help_text='AI confidence in medical coding', null=True)),
                ('market_price_comparison', models.JSONField(blank=True, default=dict, help_text='AI market price analysis')),
                ('pricing_optimization_applied', models.BooleanField(default=False)),
                ('original_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='billing.invoice')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='billing.medicalservice')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('payment_number', models.CharField(blank=True, max_length=20, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('payment_method', models.CharField(choices=[('CASH', 'Cash'), ('CREDIT_CARD', 'Credit Card'), ('DEBIT_CARD', 'Debit Card'), ('CHECK', 'Check'), ('BANK_TRANSFER', 'Bank Transfer'), ('INSURANCE', 'Insurance'), ('ONLINE', 'Online Payment'), ('OTHER', 'Other')], max_length=20)),
                ('payment_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('transaction_id', models.CharField(blank=True, max_length=100)),
                ('reference_number', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled'), ('REFUNDED', 'Refunded')], default='COMPLETED', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='billing.invoice')),
                ('processed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_payments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='PaymentRiskAssessment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('overall_risk_level', models.CharField(choices=[('VERY_LOW', 'Very Low Risk'), ('LOW', 'Low Risk'), ('MEDIUM', 'Medium Risk'), ('HIGH', 'High Risk'), ('VERY_HIGH', 'Very High Risk')], max_length=10)),
                ('risk_score', models.FloatField(help_text='AI risk score (0.0-1.0, higher = more risk)')),
                ('payment_probability', models.FloatField(help_text='AI probability of payment (0.0-1.0)')),
                ('predicted_payment_days', models.IntegerField(help_text='AI predicted days until payment')),
                ('payment_behavior_category', models.CharField(choices=[('EXCELLENT', 'Excellent'), ('GOOD', 'Good'), ('AVERAGE', 'Average'), ('POOR', 'Poor'), ('PROBLEMATIC', 'Problematic')], max_length=20)),
                ('risk_factors', models.JSONField(default=list, help_text='AI-identified risk factors')),
                ('protective_factors', models.JSONField(default=list, help_text='AI-identified protective factors')),
                ('payment_history_analysis', models.JSONField(default=dict, help_text="Analysis of patient's payment history")),
                ('similar_patient_analysis', models.JSONField(default=dict, help_text='Analysis based on similar patients')),
                ('collection_strategy_recommendations', models.JSONField(default=list, help_text='AI recommended collection strategies')),
                ('payment_plan_recommendations', models.JSONField(default=dict, help_text='AI recommended payment plans')),
                ('ai_model_version', models.CharField(default='1.0', max_length=20)),
                ('confidence_score', models.FloatField(help_text='AI confidence in assessment')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('actual_payment_date', models.DateField(blank=True, null=True)),
                ('actual_payment_outcome', models.CharField(blank=True, choices=[('PAID_FULL', 'Paid in Full'), ('PAID_PARTIAL', 'Paid Partially'), ('PAYMENT_PLAN', 'Payment Plan'), ('COLLECTION', 'Sent to Collection'), ('WRITE_OFF', 'Written Off')], max_length=20, null=True)),
                ('prediction_accuracy', models.FloatField(blank=True, help_text='Accuracy of prediction', null=True)),
                ('invoice', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='risk_assessment', to='billing.invoice')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_risk_assessments', to='patients.patient')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RevenueAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('period_type', models.CharField(choices=[('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly'), ('QUARTERLY', 'Quarterly'), ('YEARLY', 'Yearly')], max_length=10)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('actual_revenue', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('predicted_revenue', models.DecimalField(decimal_places=2, max_digits=15)),
                ('ai_confidence', models.FloatField(help_text='AI confidence in prediction')),
                ('collection_rate', models.FloatField(blank=True, help_text='Actual collection rate as percentage', null=True)),
                ('predicted_collection_rate', models.FloatField(help_text='AI predicted collection rate')),
                ('revenue_drivers', models.JSONField(default=list, help_text='AI-identified revenue drivers')),
                ('risk_factors', models.JSONField(default=list, help_text='AI-identified risk factors')),
                ('optimization_opportunities', models.JSONField(default=list, help_text='AI-identified optimization opportunities')),
                ('forecast_data', models.JSONField(default=dict, help_text='Detailed AI forecast data')),
                ('trend_analysis', models.JSONField(default=dict, help_text='AI trend analysis')),
                ('accuracy_score', models.FloatField(blank=True, help_text='Accuracy of prediction (calculated after period)', null=True)),
                ('variance_percentage', models.FloatField(blank=True, help_text='Variance from prediction', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-period_start'],
                'indexes': [models.Index(fields=['period_start', 'period_end'], name='billing_rev_period__915a06_idx'), models.Index(fields=['period_type'], name='billing_rev_period__b9a24c_idx'), models.Index(fields=['ai_confidence'], name='billing_rev_ai_conf_815281_idx')],
            },
        ),
        migrations.AddField(
            model_name='medicalservice',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='billing.servicecategory'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['invoice_number'], name='billing_inv_invoice_70511c_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['status'], name='billing_inv_status_541249_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['due_date'], name='billing_inv_due_dat_e51895_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['patient'], name='billing_inv_patient_a03932_idx'),
        ),
        migrations.AddIndex(
            model_name='billingaiinsights',
            index=models.Index(fields=['insight_type', 'created_at'], name='billing_bil_insight_a4db5d_idx'),
        ),
        migrations.AddIndex(
            model_name='billingaiinsights',
            index=models.Index(fields=['confidence_score'], name='billing_bil_confide_53dfd0_idx'),
        ),
        migrations.AddIndex(
            model_name='billingaiinsights',
            index=models.Index(fields=['implementation_priority'], name='billing_bil_impleme_f238f6_idx'),
        ),
        migrations.AddIndex(
            model_name='invoiceitem',
            index=models.Index(fields=['service_code'], name='billing_inv_service_062c45_idx'),
        ),
        migrations.AddIndex(
            model_name='invoiceitem',
            index=models.Index(fields=['ai_generated'], name='billing_inv_ai_gene_f137e0_idx'),
        ),
        migrations.AddIndex(
            model_name='invoiceitem',
            index=models.Index(fields=['icd_10_code'], name='billing_inv_icd_10__0bb025_idx'),
        ),
        migrations.AddIndex(
            model_name='invoiceitem',
            index=models.Index(fields=['cpt_code'], name='billing_inv_cpt_cod_03fa62_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentriskassessment',
            index=models.Index(fields=['patient', 'overall_risk_level'], name='billing_pay_patient_669709_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentriskassessment',
            index=models.Index(fields=['risk_score'], name='billing_pay_risk_sc_4bcdef_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentriskassessment',
            index=models.Index(fields=['payment_probability'], name='billing_pay_payment_0f19ce_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentriskassessment',
            index=models.Index(fields=['created_at'], name='billing_pay_created_c032a0_idx'),
        ),
    ]
