# Multi-stage Dockerfile for ZAIN HMS Production
FROM python:3.11-slim as base

# Build arguments
ARG VERSION=dev
ARG BUILD_DATE
ARG VCS_REF

# Labels
LABEL org.opencontainers.image.title="ZAIN HMS" \
      org.opencontainers.image.description="Hospital Management System" \
      org.opencontainers.image.version="$VERSION" \
      org.opencontainers.image.created="$BUILD_DATE" \
      org.opencontainers.image.revision="$VCS_REF" \
      org.opencontainers.image.licenses="Proprietary"

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    DJANGO_SETTINGS_MODULE=zain_hms.production_settings \
    VERSION=$VERSION

# Install system dependencies
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        postgresql-client \
        gettext \
        mime-support \
        nginx \
        supervisor \
        curl \
        wget \
    && rm -rf /var/lib/apt/lists/*

# Create app user
RUN groupadd -r app && useradd --no-log-init -r -g app app

# Set work directory
WORKDIR /app

# Install Python dependencies
COPY requirements_production.txt apps/requirements.txt ./
RUN pip install --no-cache-dir --upgrade pip \
    && pip install --no-cache-dir -r requirements_production.txt \
    && pip install --no-cache-dir -r requirements.txt

# Copy project files
COPY --chown=app:app . .

# Create required directories
RUN mkdir -p /app/staticfiles /app/media /app/logs \
    && chown -R app:app /app

# Collect static files
RUN python manage.py collectstatic --noinput

# Configure Nginx
COPY docker/nginx.conf /etc/nginx/sites-available/default
COPY docker/supervisor.conf /etc/supervisor/conf.d/supervisord.conf

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health/ || exit 1

# Create entrypoint script
COPY docker/entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# Switch to app user
USER app

# Expose port
EXPOSE 8000

# Set entrypoint
ENTRYPOINT ["/entrypoint.sh"]